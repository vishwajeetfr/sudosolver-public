{"ast":null,"code":"var _jsxFileName = \"/Users/vishwajeetpatil/Desktop/git/sudosolver-public/src/containers/CellInputs/CellInputs.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as classes from \"./CellInputs.module.css\";\nimport CellInput from \"../../components/CellInput/CellInput\";\nimport * as sudokuActions from \"../../store/actions/sudokuActions\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst availableInputs = [\"C\", 1, 2, 3, 4, 5, 6, 7, 8, 9];\nconst CellInputs = ({\n  activeCell,\n  setSudokuState\n}) => {\n  _s();\n  useEffect(() => {\n    const keyDownHandler = event => {\n      let key = event.key;\n      const supportedInputs = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"Backspace\"];\n      if (!supportedInputs.includes(key)) return;\n      let bindingValue = key === \"Backspace\" ? null : +key;\n      cellInputClickedHandler(bindingValue);\n    };\n    const cellInputClickedHandler = value => {\n      const {\n        row,\n        column\n      } = activeCell;\n      setSudokuState(row, column, value);\n    };\n    document.body.addEventListener(\"keydown\", keyDownHandler);\n    return () => {\n      document.body.removeEventListener(\"keydown\", keyDownHandler);\n    };\n  }, [activeCell, setSudokuState]);\n  const cellInputClickedHandler = value => {\n    const {\n      row,\n      column\n    } = activeCell;\n    setSudokuState(row, column, value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.CellInputs,\n    children: availableInputs.map((el, i) => /*#__PURE__*/_jsxDEV(CellInput, {\n      value: el,\n      cellInputClickedHandler: cellInputClickedHandler,\n      isClear: el === \"C\"\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(CellInputs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CellInputs;\nconst mapStateToProps = state => {\n  return {\n    activeCell: state.appUI.activeCell\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSudokuState: (row, column, value) => dispatch(sudokuActions.setSudokuState(row, column, value))\n  };\n};\nCellInputs.propTypes = {\n  activeCell: PropTypes.object,\n  setSudokuState: PropTypes.func\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CellInputs);\nvar _c;\n$RefreshReg$(_c, \"CellInputs\");","map":{"version":3,"names":["React","useEffect","connect","classes","CellInput","sudokuActions","PropTypes","jsxDEV","_jsxDEV","availableInputs","CellInputs","activeCell","setSudokuState","_s","keyDownHandler","event","key","supportedInputs","includes","bindingValue","cellInputClickedHandler","value","row","column","document","body","addEventListener","removeEventListener","className","children","map","el","i","isClear","fileName","_jsxFileName","lineNumber","columnNumber","_c","mapStateToProps","state","appUI","mapDispatchToProps","dispatch","propTypes","object","func","$RefreshReg$"],"sources":["/Users/vishwajeetpatil/Desktop/git/sudosolver-public/src/containers/CellInputs/CellInputs.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as classes from \"./CellInputs.module.css\";\nimport CellInput from \"../../components/CellInput/CellInput\";\nimport * as sudokuActions from \"../../store/actions/sudokuActions\";\nimport PropTypes from \"prop-types\";\n\nconst availableInputs = [\"C\", 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nconst CellInputs = ({ activeCell, setSudokuState }) => {\n  useEffect(() => {\n    const keyDownHandler = (event) => {\n      let key = event.key;\n\n      const supportedInputs = [\n        \"1\",\n        \"2\",\n        \"3\",\n        \"4\",\n        \"5\",\n        \"6\",\n        \"7\",\n        \"8\",\n        \"9\",\n        \"Backspace\",\n      ];\n      if (!supportedInputs.includes(key)) return;\n\n      let bindingValue = key === \"Backspace\" ? null : +key;\n      cellInputClickedHandler(bindingValue);\n    };\n\n    const cellInputClickedHandler = (value) => {\n      const { row, column } = activeCell;\n      setSudokuState(row, column, value);\n    };\n\n    document.body.addEventListener(\"keydown\", keyDownHandler);\n\n    return () => {\n      document.body.removeEventListener(\"keydown\", keyDownHandler);\n    };\n  }, [activeCell, setSudokuState]);\n\n  const cellInputClickedHandler = (value) => {\n    const { row, column } = activeCell;\n    setSudokuState(row, column, value);\n  };\n\n  return (\n    <div className={classes.CellInputs}>\n      {availableInputs.map((el, i) => (\n        <CellInput\n          key={i}\n          value={el}\n          cellInputClickedHandler={cellInputClickedHandler}\n          isClear={el === \"C\"}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    activeCell: state.appUI.activeCell,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setSudokuState: (row, column, value) =>\n      dispatch(sudokuActions.setSudokuState(row, column, value)),\n  };\n};\n\nCellInputs.propTypes = {\n  activeCell: PropTypes.object,\n  setSudokuState: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CellInputs);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}