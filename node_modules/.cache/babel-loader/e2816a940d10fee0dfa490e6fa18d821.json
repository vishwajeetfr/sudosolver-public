{"ast":null,"code":"var _jsxFileName = \"/Users/vishwajeetpatil/Desktop/sudosolver-master/src/containers/IntroPage/IntroPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as classes from \"./IntroPage.module.css\";\nimport * as sudokuActions from \"../../store/actions/sudokuActions\";\nimport * as appUIactions from \"../../store/actions/appUIactions\";\nimport { MODE_PLAY, MODE_SOLVE } from \"../../helpers/helpers\";\nimport OptionSide from \"../../components/OptionSIde/OptionSide\";\nimport RadioGroup from \"../../UI/RadioGroup/RadioGroup\";\nimport { useNavigate } from \"react-router-dom\";\nimport { EASY_PUZZLE, MEDIUM_PUZZLE, HARD_PUZZLE } from \"../../helpers/helpers\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IntroPage = props => {\n  _s();\n  const styleClasses = [classes.IntroPage];\n  if (!props.shouldShowIntroComponent) {\n    styleClasses.push(classes.Hidden);\n  }\n  const setEasyDifficulty = () => {\n    props.setDifficulty(EASY_PUZZLE);\n  };\n  const setMediumDifficulty = () => {\n    props.setDifficulty(MEDIUM_PUZZLE);\n  };\n  const setHardDifficulty = () => {\n    props.setDifficulty(HARD_PUZZLE);\n  };\n  const difficultyBtns = [{\n    radioLabel: \"Easy\",\n    radioAction: setEasyDifficulty\n  }, {\n    radioLabel: \"Medium\",\n    radioAction: setMediumDifficulty\n  }, {\n    radioLabel: \"Hard\",\n    radioAction: setHardDifficulty\n  }];\n  const navigate = useNavigate();\n  const SignupHandler = () => {\n    navigate(\"/signup\");\n  };\n  const LoginHandler = () => {\n    navigate(\"login\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styleClasses.join(\" \"),\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"sudosolver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: SignupHandler,\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: LoginHandler,\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Heading,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: classes.HeadingInfo,\n        children: \"Select a game mode below to get started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Options,\n      children: [/*#__PURE__*/_jsxDEV(OptionSide, {\n        heading: \"Play Sudoku\",\n        details: \"GENERATE A RANDOM SUDOKU\",\n        btnLabel: \"Play now\",\n        btnDisabledCondition: !props.difficulty,\n        btnCTA: props.setPuzzleAndSolvedPuzzle,\n        children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n          radioGroupTitle: \"Select a difficulty level:\",\n          radioBtns: difficultyBtns,\n          radioGroupName: \"difficulty button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OptionSide, {\n        heading: \"Solve my Sudoku\",\n        details: \"GOT A SUDOKU TO SOLVE?\",\n        btnLabel: \"Solve now\",\n        btnDisabledCondition: null,\n        btnCTA: props.setBoardToEmpty\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(IntroPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = IntroPage;\nconst mapStateToProps = state => {\n  return {\n    difficulty: state.sudoku.difficulty,\n    shouldShowIntroComponent: state.appUI.showIntroComponent\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDifficulty: difficulty => {\n      dispatch(sudokuActions.setDifficulty(difficulty));\n    },\n    setPuzzleAndSolvedPuzzle: () => {\n      dispatch(sudokuActions.setPuzzleAndSolvedPuzzle());\n      dispatch(sudokuActions.setGameMode(MODE_PLAY));\n      dispatch(appUIactions.toggleIntroComponent());\n    },\n    setBoardToEmpty: () => {\n      dispatch(sudokuActions.initUserInputSUdokuToSolve());\n      dispatch(sudokuActions.setGameMode(MODE_SOLVE));\n      dispatch(appUIactions.toggleIntroComponent());\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(IntroPage);\nIntroPage.propTypes = {\n  difficulty: PropTypes.string,\n  shouldShowIntroComponent: PropTypes.bool,\n  setDifficulty: PropTypes.func,\n  setPuzzleAndSolvedPuzzle: PropTypes.func,\n  setBoardToEmpty: PropTypes.func\n};\nvar _c;\n$RefreshReg$(_c, \"IntroPage\");","map":{"version":3,"names":["React","connect","classes","sudokuActions","appUIactions","MODE_PLAY","MODE_SOLVE","OptionSide","RadioGroup","useNavigate","EASY_PUZZLE","MEDIUM_PUZZLE","HARD_PUZZLE","PropTypes","jsxDEV","_jsxDEV","IntroPage","props","_s","styleClasses","shouldShowIntroComponent","push","Hidden","setEasyDifficulty","setDifficulty","setMediumDifficulty","setHardDifficulty","difficultyBtns","radioLabel","radioAction","navigate","SignupHandler","LoginHandler","className","join","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Heading","HeadingInfo","Options","heading","details","btnLabel","btnDisabledCondition","difficulty","btnCTA","setPuzzleAndSolvedPuzzle","radioGroupTitle","radioBtns","radioGroupName","setBoardToEmpty","_c","mapStateToProps","state","sudoku","appUI","showIntroComponent","mapDispatchToProps","dispatch","setGameMode","toggleIntroComponent","initUserInputSUdokuToSolve","propTypes","string","bool","func","$RefreshReg$"],"sources":["/Users/vishwajeetpatil/Desktop/sudosolver-master/src/containers/IntroPage/IntroPage.js"],"sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as classes from \"./IntroPage.module.css\";\nimport * as sudokuActions from \"../../store/actions/sudokuActions\";\nimport * as appUIactions from \"../../store/actions/appUIactions\";\nimport { MODE_PLAY, MODE_SOLVE } from \"../../helpers/helpers\";\n\nimport OptionSide from \"../../components/OptionSIde/OptionSide\";\nimport RadioGroup from \"../../UI/RadioGroup/RadioGroup\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nimport { EASY_PUZZLE, MEDIUM_PUZZLE, HARD_PUZZLE } from \"../../helpers/helpers\";\n\nimport PropTypes from \"prop-types\";\n\nconst IntroPage = (props) => {\n  const styleClasses = [classes.IntroPage];\n\n  if (!props.shouldShowIntroComponent) {\n    styleClasses.push(classes.Hidden);\n  }\n\n  const setEasyDifficulty = () => {\n    props.setDifficulty(EASY_PUZZLE);\n  };\n\n  const setMediumDifficulty = () => {\n    props.setDifficulty(MEDIUM_PUZZLE);\n  };\n  const setHardDifficulty = () => {\n    props.setDifficulty(HARD_PUZZLE);\n  };\n\n  const difficultyBtns = [\n    { radioLabel: \"Easy\", radioAction: setEasyDifficulty },\n    { radioLabel: \"Medium\", radioAction: setMediumDifficulty },\n    { radioLabel: \"Hard\", radioAction: setHardDifficulty },\n  ];\n\n  const navigate = useNavigate();\n\n  const SignupHandler = () => {\n    navigate(\"/signup\");\n  };\n  const LoginHandler = () => {\n    navigate(\"login\");\n  };\n  return (\n    <div className={styleClasses.join(\" \")}>\n      <header>\n        <h1>sudosolver</h1>\n        <button onClick={SignupHandler}>Sign up</button>\n        <button onClick={LoginHandler}>Log in</button>\n      </header>\n      <div className={classes.Heading}>\n        <h3 className={classes.HeadingInfo}>\n          Select a game mode below to get started\n        </h3>\n      </div>\n      <div className={classes.Options}>\n        <OptionSide\n          heading=\"Play Sudoku\"\n          details=\"GENERATE A RANDOM SUDOKU\"\n          btnLabel=\"Play now\"\n          btnDisabledCondition={!props.difficulty}\n          btnCTA={props.setPuzzleAndSolvedPuzzle}\n        >\n          <RadioGroup\n            radioGroupTitle=\"Select a difficulty level:\"\n            radioBtns={difficultyBtns}\n            radioGroupName=\"difficulty button\"\n          />\n        </OptionSide>\n\n        <OptionSide\n          heading=\"Solve my Sudoku\"\n          details=\"GOT A SUDOKU TO SOLVE?\"\n          btnLabel=\"Solve now\"\n          btnDisabledCondition={null}\n          btnCTA={props.setBoardToEmpty}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    difficulty: state.sudoku.difficulty,\n    shouldShowIntroComponent: state.appUI.showIntroComponent,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setDifficulty: (difficulty) => {\n      dispatch(sudokuActions.setDifficulty(difficulty));\n    },\n    setPuzzleAndSolvedPuzzle: () => {\n      dispatch(sudokuActions.setPuzzleAndSolvedPuzzle());\n      dispatch(sudokuActions.setGameMode(MODE_PLAY));\n      dispatch(appUIactions.toggleIntroComponent());\n    },\n    setBoardToEmpty: () => {\n      dispatch(sudokuActions.initUserInputSUdokuToSolve());\n      dispatch(sudokuActions.setGameMode(MODE_SOLVE));\n      dispatch(appUIactions.toggleIntroComponent());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IntroPage);\n\nIntroPage.propTypes = {\n  difficulty: PropTypes.string,\n  shouldShowIntroComponent: PropTypes.bool,\n\n  setDifficulty: PropTypes.func,\n  setPuzzleAndSolvedPuzzle: PropTypes.func,\n  setBoardToEmpty: PropTypes.func,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}