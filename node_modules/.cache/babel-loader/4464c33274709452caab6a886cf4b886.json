{"ast":null,"code":"// Sudoku Generator and Solver for node.js\n// Copyright (c) 2011 Blagovest Dachev.  All rights reserved.\n//\n// This is a port of David Bau's python  implementation:\n// http://davidbau.com/archives/2006/09/04/sudoku_generator.html\nfunction makepuzzle(board) {\n  var puzzle = [];\n  var deduced = Array(81).fill(null);\n  var order = [...Array(81).keys()];\n  shuffleArray(order);\n  for (var i = 0; i < order.length; i++) {\n    var pos = order[i];\n    if (deduced[pos] === null) {\n      puzzle.push({\n        pos: pos,\n        num: board[pos]\n      });\n      deduced[pos] = board[pos];\n      deduce(deduced);\n    }\n  }\n  shuffleArray(puzzle);\n  for (var i = puzzle.length - 1; i >= 0; i--) {\n    var e = puzzle[i];\n    removeElement(puzzle, i);\n    var rating = checkpuzzle(boardforentries(puzzle), board);\n    if (rating === -1) {\n      puzzle.push(e);\n    }\n  }\n  return boardforentries(puzzle);\n}\nfunction ratepuzzle(puzzle, samples) {\n  var total = 0;\n  for (var i = 0; i < samples; i++) {\n    var tuple = solveboard(puzzle);\n    if (tuple.answer === null) {\n      return -1;\n    }\n    total += tuple.state.length;\n  }\n  return total / samples;\n}\nfunction checkpuzzle(puzzle, board) {\n  if (board === undefined) {\n    board = null;\n  }\n  var tuple1 = solveboard(puzzle);\n  if (tuple1.answer === null) {\n    return -1;\n  }\n  if (board != null && !boardmatches(board, tuple1.answer)) {\n    return -1;\n  }\n  var difficulty = tuple1.state.length;\n  var tuple2 = solvenext(tuple1.state);\n  if (tuple2.answer != null) {\n    return -1;\n  }\n  return difficulty;\n}\nfunction solvepuzzle(board) {\n  return solveboard(board).answer;\n}\nfunction solveboard(original) {\n  var board = [].concat(original);\n  var guesses = deduce(board);\n  if (guesses === null) {\n    return {\n      state: [],\n      answer: board\n    };\n  }\n  var track = [{\n    guesses: guesses,\n    count: 0,\n    board: board\n  }];\n  return solvenext(track);\n}\nfunction solvenext(remembered) {\n  while (remembered.length > 0) {\n    var tuple1 = remembered.pop();\n    if (tuple1.count >= tuple1.guesses.length) {\n      continue;\n    }\n    remembered.push({\n      guesses: tuple1.guesses,\n      count: tuple1.count + 1,\n      board: tuple1.board\n    });\n    var workspace = [].concat(tuple1.board);\n    var tuple2 = tuple1.guesses[tuple1.count];\n    workspace[tuple2.pos] = tuple2.num;\n    var guesses = deduce(workspace);\n    if (guesses === null) {\n      return {\n        state: remembered,\n        answer: workspace\n      };\n    }\n    remembered.push({\n      guesses: guesses,\n      count: 0,\n      board: workspace\n    });\n  }\n  return {\n    state: [],\n    answer: null\n  };\n}\nfunction deduce(board) {\n  while (true) {\n    var stuck = true;\n    var guess = null;\n    var count = 0; // fill in any spots determined by direct conflicts\n\n    var tuple1 = figurebits(board);\n    var allowed = tuple1.allowed;\n    var needed = tuple1.needed;\n    for (var pos = 0; pos < 81; pos++) {\n      if (board[pos] === null) {\n        var numbers = listbits(allowed[pos]);\n        if (numbers.length === 0) {\n          return [];\n        } else if (numbers.length === 1) {\n          board[pos] = numbers[0];\n          stuck = false;\n        } else if (stuck) {\n          var t = numbers.map(function (val, key) {\n            return {\n              pos: pos,\n              num: val\n            };\n          });\n          var tuple2 = pickbetter(guess, count, t);\n          guess = tuple2.guess;\n          count = tuple2.count;\n        }\n      }\n    }\n    if (!stuck) {\n      var tuple3 = figurebits(board);\n      allowed = tuple3.allowed;\n      needed = tuple3.needed;\n    } // fill in any spots determined by elimination of other locations\n\n    for (var axis = 0; axis < 3; axis++) {\n      for (var x = 0; x < 9; x++) {\n        var numbers = listbits(needed[axis * 9 + x]);\n        for (var i = 0; i < numbers.length; i++) {\n          var n = numbers[i];\n          var bit = 1 << n;\n          var spots = [];\n          for (var y = 0; y < 9; y++) {\n            var pos = posfor(x, y, axis);\n            if (allowed[pos] & bit) {\n              spots.push(pos);\n            }\n          }\n          if (spots.length === 0) {\n            return [];\n          } else if (spots.length === 1) {\n            board[spots[0]] = n;\n            stuck = false;\n          } else if (stuck) {\n            var t = spots.map(function (val, key) {\n              return {\n                pos: val,\n                num: n\n              };\n            });\n            var tuple4 = pickbetter(guess, count, t);\n            guess = tuple4.guess;\n            count = tuple4.count;\n          }\n        }\n      }\n    }\n    if (stuck) {\n      if (guess != null) {\n        shuffleArray(guess);\n      }\n      return guess;\n    }\n  }\n}\nfunction figurebits(board) {\n  var needed = [];\n  var allowed = board.map(function (val, key) {\n    return val === null ? 511 : 0;\n  }, []);\n  for (var axis = 0; axis < 3; axis++) {\n    for (var x = 0; x < 9; x++) {\n      var bits = axismissing(board, x, axis);\n      needed.push(bits);\n      for (var y = 0; y < 9; y++) {\n        var pos = posfor(x, y, axis);\n        allowed[pos] = allowed[pos] & bits;\n      }\n    }\n  }\n  return {\n    allowed: allowed,\n    needed: needed\n  };\n}\nfunction posfor(x, y, axis) {\n  if (axis === undefined) {\n    axis = 0;\n  }\n  if (axis === 0) {\n    return x * 9 + y;\n  } else if (axis === 1) {\n    return y * 9 + x;\n  }\n  return [0, 3, 6, 27, 30, 33, 54, 57, 60][x] + [0, 1, 2, 9, 10, 11, 18, 19, 20][y];\n}\nfunction axismissing(board, x, axis) {\n  var bits = 0;\n  for (var y = 0; y < 9; y++) {\n    var e = board[posfor(x, y, axis)];\n    if (e != null) {\n      bits |= 1 << e;\n    }\n  }\n  return 511 ^ bits;\n}\nfunction listbits(bits) {\n  var list = [];\n  for (var y = 0; y < 9; y++) {\n    if ((bits & 1 << y) != 0) {\n      list.push(y);\n    }\n  }\n  return list;\n}\nfunction pickbetter(b, c, t) {\n  if (b === null || t.length < b.length) {\n    return {\n      guess: t,\n      count: 1\n    };\n  } else if (t.length > b.length) {\n    return {\n      guess: b,\n      count: c\n    };\n  } else if (randomInt(c) === 0) {\n    return {\n      guess: t,\n      count: c + 1\n    };\n  }\n  return {\n    guess: b,\n    count: c + 1\n  };\n}\nfunction boardforentries(entries) {\n  var board = Array(81).fill(null);\n  for (var i = 0; i < entries.length; i++) {\n    var item = entries[i];\n    var pos = item.pos;\n    var num = item.num;\n    board[pos] = num;\n  }\n  return board;\n}\nfunction boardmatches(b1, b2) {\n  for (var i = 0; i < 81; i++) {\n    if (b1[i] != b2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction randomInt(max) {\n  return Math.floor(Math.random() * (max + 1));\n}\nfunction shuffleArray(original) {\n  // Swap each element with another randomly selected one.\n  for (var i = 0; i < original.length; i++) {\n    var j = i;\n    while (j === i) {\n      j = Math.floor(Math.random() * original.length);\n    }\n    var contents = original[i];\n    original[i] = original[j];\n    original[j] = contents;\n  }\n}\nfunction removeElement(array, from, to) {\n  var rest = array.slice((to || from) + 1 || array.length);\n  array.length = from < 0 ? array.length + from : from;\n  return array.push.apply(array, rest);\n}\nmodule.exports = {\n  makepuzzle: function () {\n    return makepuzzle(solvepuzzle(Array(81).fill(null)));\n  },\n  solvepuzzle: solvepuzzle,\n  ratepuzzle: ratepuzzle,\n  posfor: posfor\n};","map":{"version":3,"names":["makepuzzle","board","puzzle","deduced","Array","fill","order","keys","shuffleArray","i","length","pos","push","num","deduce","e","removeElement","rating","checkpuzzle","boardforentries","ratepuzzle","samples","total","tuple","solveboard","answer","state","undefined","tuple1","boardmatches","difficulty","tuple2","solvenext","solvepuzzle","original","concat","guesses","track","count","remembered","pop","workspace","stuck","guess","figurebits","allowed","needed","numbers","listbits","t","map","val","key","pickbetter","tuple3","axis","x","n","bit","spots","y","posfor","tuple4","bits","axismissing","list","b","c","randomInt","entries","item","b1","b2","max","Math","floor","random","j","contents","array","from","to","rest","slice","apply","module","exports"],"sources":["../dist-src/index.js"],"sourcesContent":["// Sudoku Generator and Solver for node.js\n// Copyright (c) 2011 Blagovest Dachev.  All rights reserved.\n//\n// This is a port of David Bau's python  implementation:\n// http://davidbau.com/archives/2006/09/04/sudoku_generator.html\nfunction makepuzzle(board) {\n  var puzzle = [];\n  var deduced = Array(81).fill(null);\n  var order = [...Array(81).keys()];\n  shuffleArray(order);\n\n  for (var i = 0; i < order.length; i++) {\n    var pos = order[i];\n\n    if (deduced[pos] === null) {\n      puzzle.push({\n        pos: pos,\n        num: board[pos]\n      });\n      deduced[pos] = board[pos];\n      deduce(deduced);\n    }\n  }\n\n  shuffleArray(puzzle);\n\n  for (var i = puzzle.length - 1; i >= 0; i--) {\n    var e = puzzle[i];\n    removeElement(puzzle, i);\n    var rating = checkpuzzle(boardforentries(puzzle), board);\n\n    if (rating === -1) {\n      puzzle.push(e);\n    }\n  }\n\n  return boardforentries(puzzle);\n}\n\nfunction ratepuzzle(puzzle, samples) {\n  var total = 0;\n\n  for (var i = 0; i < samples; i++) {\n    var tuple = solveboard(puzzle);\n\n    if (tuple.answer === null) {\n      return -1;\n    }\n\n    total += tuple.state.length;\n  }\n\n  return total / samples;\n}\n\nfunction checkpuzzle(puzzle, board) {\n  if (board === undefined) {\n    board = null;\n  }\n\n  var tuple1 = solveboard(puzzle);\n\n  if (tuple1.answer === null) {\n    return -1;\n  }\n\n  if (board != null && !boardmatches(board, tuple1.answer)) {\n    return -1;\n  }\n\n  var difficulty = tuple1.state.length;\n  var tuple2 = solvenext(tuple1.state);\n\n  if (tuple2.answer != null) {\n    return -1;\n  }\n\n  return difficulty;\n}\n\nfunction solvepuzzle(board) {\n  return solveboard(board).answer;\n}\n\nfunction solveboard(original) {\n  var board = [].concat(original);\n  var guesses = deduce(board);\n\n  if (guesses === null) {\n    return {\n      state: [],\n      answer: board\n    };\n  }\n\n  var track = [{\n    guesses: guesses,\n    count: 0,\n    board: board\n  }];\n  return solvenext(track);\n}\n\nfunction solvenext(remembered) {\n  while (remembered.length > 0) {\n    var tuple1 = remembered.pop();\n\n    if (tuple1.count >= tuple1.guesses.length) {\n      continue;\n    }\n\n    remembered.push({\n      guesses: tuple1.guesses,\n      count: tuple1.count + 1,\n      board: tuple1.board\n    });\n    var workspace = [].concat(tuple1.board);\n    var tuple2 = tuple1.guesses[tuple1.count];\n    workspace[tuple2.pos] = tuple2.num;\n    var guesses = deduce(workspace);\n\n    if (guesses === null) {\n      return {\n        state: remembered,\n        answer: workspace\n      };\n    }\n\n    remembered.push({\n      guesses: guesses,\n      count: 0,\n      board: workspace\n    });\n  }\n\n  return {\n    state: [],\n    answer: null\n  };\n}\n\nfunction deduce(board) {\n  while (true) {\n    var stuck = true;\n    var guess = null;\n    var count = 0; // fill in any spots determined by direct conflicts\n\n    var tuple1 = figurebits(board);\n    var allowed = tuple1.allowed;\n    var needed = tuple1.needed;\n\n    for (var pos = 0; pos < 81; pos++) {\n      if (board[pos] === null) {\n        var numbers = listbits(allowed[pos]);\n\n        if (numbers.length === 0) {\n          return [];\n        } else if (numbers.length === 1) {\n          board[pos] = numbers[0];\n          stuck = false;\n        } else if (stuck) {\n          var t = numbers.map(function (val, key) {\n            return {\n              pos: pos,\n              num: val\n            };\n          });\n          var tuple2 = pickbetter(guess, count, t);\n          guess = tuple2.guess;\n          count = tuple2.count;\n        }\n      }\n    }\n\n    if (!stuck) {\n      var tuple3 = figurebits(board);\n      allowed = tuple3.allowed;\n      needed = tuple3.needed;\n    } // fill in any spots determined by elimination of other locations\n\n\n    for (var axis = 0; axis < 3; axis++) {\n      for (var x = 0; x < 9; x++) {\n        var numbers = listbits(needed[axis * 9 + x]);\n\n        for (var i = 0; i < numbers.length; i++) {\n          var n = numbers[i];\n          var bit = 1 << n;\n          var spots = [];\n\n          for (var y = 0; y < 9; y++) {\n            var pos = posfor(x, y, axis);\n\n            if (allowed[pos] & bit) {\n              spots.push(pos);\n            }\n          }\n\n          if (spots.length === 0) {\n            return [];\n          } else if (spots.length === 1) {\n            board[spots[0]] = n;\n            stuck = false;\n          } else if (stuck) {\n            var t = spots.map(function (val, key) {\n              return {\n                pos: val,\n                num: n\n              };\n            });\n            var tuple4 = pickbetter(guess, count, t);\n            guess = tuple4.guess;\n            count = tuple4.count;\n          }\n        }\n      }\n    }\n\n    if (stuck) {\n      if (guess != null) {\n        shuffleArray(guess);\n      }\n\n      return guess;\n    }\n  }\n}\n\nfunction figurebits(board) {\n  var needed = [];\n  var allowed = board.map(function (val, key) {\n    return val === null ? 511 : 0;\n  }, []);\n\n  for (var axis = 0; axis < 3; axis++) {\n    for (var x = 0; x < 9; x++) {\n      var bits = axismissing(board, x, axis);\n      needed.push(bits);\n\n      for (var y = 0; y < 9; y++) {\n        var pos = posfor(x, y, axis);\n        allowed[pos] = allowed[pos] & bits;\n      }\n    }\n  }\n\n  return {\n    allowed: allowed,\n    needed: needed\n  };\n}\n\nfunction posfor(x, y, axis) {\n  if (axis === undefined) {\n    axis = 0;\n  }\n\n  if (axis === 0) {\n    return x * 9 + y;\n  } else if (axis === 1) {\n    return y * 9 + x;\n  }\n\n  return [0, 3, 6, 27, 30, 33, 54, 57, 60][x] + [0, 1, 2, 9, 10, 11, 18, 19, 20][y];\n}\n\nfunction axisfor(pos, axis) {\n  if (axis === 0) {\n    return Math.floor(pos / 9);\n  } else if (axis === 1) {\n    return pos % 9;\n  }\n\n  return Math.floor(pos / 27) * 3 + Math.floor(pos / 3) % 3;\n}\n\nfunction axismissing(board, x, axis) {\n  var bits = 0;\n\n  for (var y = 0; y < 9; y++) {\n    var e = board[posfor(x, y, axis)];\n\n    if (e != null) {\n      bits |= 1 << e;\n    }\n  }\n\n  return 511 ^ bits;\n}\n\nfunction listbits(bits) {\n  var list = [];\n\n  for (var y = 0; y < 9; y++) {\n    if ((bits & 1 << y) != 0) {\n      list.push(y);\n    }\n  }\n\n  return list;\n}\n\nfunction allowed(board, pos) {\n  var bits = 511;\n\n  for (var axis = 0; axis < 3; axis++) {\n    var x = axisfor(pos, axis);\n    bits = bits & axismissing(board, x, axis);\n  }\n\n  return bits;\n} // TODO: make sure callers utilize the return value correctly\n\n\nfunction pickbetter(b, c, t) {\n  if (b === null || t.length < b.length) {\n    return {\n      guess: t,\n      count: 1\n    };\n  } else if (t.length > b.length) {\n    return {\n      guess: b,\n      count: c\n    };\n  } else if (randomInt(c) === 0) {\n    return {\n      guess: t,\n      count: c + 1\n    };\n  }\n\n  return {\n    guess: b,\n    count: c + 1\n  };\n}\n\nfunction boardforentries(entries) {\n  var board = Array(81).fill(null);\n\n  for (var i = 0; i < entries.length; i++) {\n    var item = entries[i];\n    var pos = item.pos;\n    var num = item.num;\n    board[pos] = num;\n  }\n\n  return board;\n}\n\nfunction boardmatches(b1, b2) {\n  for (var i = 0; i < 81; i++) {\n    if (b1[i] != b2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction randomInt(max) {\n  return Math.floor(Math.random() * (max + 1));\n}\n\nfunction shuffleArray(original) {\n  // Swap each element with another randomly selected one.\n  for (var i = 0; i < original.length; i++) {\n    var j = i;\n\n    while (j === i) {\n      j = Math.floor(Math.random() * original.length);\n    }\n\n    var contents = original[i];\n    original[i] = original[j];\n    original[j] = contents;\n  }\n}\n\nfunction removeElement(array, from, to) {\n  var rest = array.slice((to || from) + 1 || array.length);\n  array.length = from < 0 ? array.length + from : from;\n  return array.push.apply(array, rest);\n}\n\n;\nmodule.exports = {\n  makepuzzle: function () {\n    return makepuzzle(solvepuzzle(Array(81).fill(null)));\n  },\n  solvepuzzle: solvepuzzle,\n  ratepuzzle: ratepuzzle,\n  posfor: posfor\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}