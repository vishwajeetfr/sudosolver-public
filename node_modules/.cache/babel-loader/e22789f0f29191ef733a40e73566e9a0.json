{"ast":null,"code":"/*!\n * array-duplicated | ISC (c) Shinnosuke Watanabe\n * https://github.com/shinnn/array-duplicated\n*/\nimport appendType from 'append-type';\nfunction is(val) {\n  return Object.is(this, val);\n}\nfunction reducer(accumulator, val, index, arr) {\n  if (accumulator.skippableIndexes.has(index)) {\n    return accumulator;\n  }\n  if (accumulator.results.findIndex(is, val) !== -1) {\n    return accumulator;\n  }\n  var foundIndex = arr.findIndex(is, val);\n  if (foundIndex !== index) {\n    accumulator.skippableIndexes.add(foundIndex);\n    accumulator.results.unshift(val);\n  }\n  return accumulator;\n}\nexport default function arrayDuplicated(arr) {\n  if (!Array.isArray(arr)) {\n    throw new TypeError('Expected an Array, but got ' + appendType(arr) + '.');\n  }\n  if (arr.length < 2) {\n    return [];\n  }\n  return arr.reduceRight(reducer, {\n    results: [],\n    skippableIndexes: new Set()\n  }).results;\n}","map":{"version":3,"names":["appendType","is","val","Object","reducer","accumulator","index","arr","skippableIndexes","has","results","findIndex","foundIndex","add","unshift","arrayDuplicated","Array","isArray","TypeError","length","reduceRight","Set"],"sources":["/Users/vishwajeetpatil/Desktop/git/sudosolver/node_modules/array-duplicated/index.mjs"],"sourcesContent":["/*!\n * array-duplicated | ISC (c) Shinnosuke Watanabe\n * https://github.com/shinnn/array-duplicated\n*/\nimport appendType from 'append-type';\n\nfunction is(val) {\n\treturn Object.is(this, val);\n}\n\nfunction reducer(accumulator, val, index, arr) {\n\tif (accumulator.skippableIndexes.has(index)) {\n\t\treturn accumulator;\n\t}\n\n\tif (accumulator.results.findIndex(is, val) !== -1) {\n\t\treturn accumulator;\n\t}\n\n\tvar foundIndex = arr.findIndex(is, val);\n\n\tif (foundIndex !== index) {\n\t\taccumulator.skippableIndexes.add(foundIndex);\n\t\taccumulator.results.unshift(val);\n\t}\n\n\treturn accumulator;\n}\n\nexport default function arrayDuplicated(arr) {\n\tif (!Array.isArray(arr)) {\n\t\tthrow new TypeError('Expected an Array, but got ' + appendType(arr) + '.');\n\t}\n\n\tif (arr.length < 2) {\n\t\treturn [];\n\t}\n\n\treturn arr.reduceRight(reducer, {\n\t\tresults: [],\n\t\tskippableIndexes: new Set()\n\t}).results;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,UAAU,MAAM,aAAa;AAEpC,SAASC,EAAEA,CAACC,GAAG,EAAE;EAChB,OAAOC,MAAM,CAACF,EAAE,CAAC,IAAI,EAAEC,GAAG,CAAC;AAC5B;AAEA,SAASE,OAAOA,CAACC,WAAW,EAAEH,GAAG,EAAEI,KAAK,EAAEC,GAAG,EAAE;EAC9C,IAAIF,WAAW,CAACG,gBAAgB,CAACC,GAAG,CAACH,KAAK,CAAC,EAAE;IAC5C,OAAOD,WAAW;EACnB;EAEA,IAAIA,WAAW,CAACK,OAAO,CAACC,SAAS,CAACV,EAAE,EAAEC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;IAClD,OAAOG,WAAW;EACnB;EAEA,IAAIO,UAAU,GAAGL,GAAG,CAACI,SAAS,CAACV,EAAE,EAAEC,GAAG,CAAC;EAEvC,IAAIU,UAAU,KAAKN,KAAK,EAAE;IACzBD,WAAW,CAACG,gBAAgB,CAACK,GAAG,CAACD,UAAU,CAAC;IAC5CP,WAAW,CAACK,OAAO,CAACI,OAAO,CAACZ,GAAG,CAAC;EACjC;EAEA,OAAOG,WAAW;AACnB;AAEA,eAAe,SAASU,eAAeA,CAACR,GAAG,EAAE;EAC5C,IAAI,CAACS,KAAK,CAACC,OAAO,CAACV,GAAG,CAAC,EAAE;IACxB,MAAM,IAAIW,SAAS,CAAC,6BAA6B,GAAGlB,UAAU,CAACO,GAAG,CAAC,GAAG,GAAG,CAAC;EAC3E;EAEA,IAAIA,GAAG,CAACY,MAAM,GAAG,CAAC,EAAE;IACnB,OAAO,EAAE;EACV;EAEA,OAAOZ,GAAG,CAACa,WAAW,CAAChB,OAAO,EAAE;IAC/BM,OAAO,EAAE,EAAE;IACXF,gBAAgB,EAAE,IAAIa,GAAG,CAAC;EAC3B,CAAC,CAAC,CAACX,OAAO;AACX","ignoreList":[]},"metadata":{},"sourceType":"module"}