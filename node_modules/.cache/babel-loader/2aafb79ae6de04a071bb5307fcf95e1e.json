{"ast":null,"code":"import * as actions from \"../actions/actionTypes\";\nexport const setActivateCell = payload => {\n  return {\n    type: actions.ACTIVATE_CELL,\n    payload: payload\n  };\n};\nexport const setSudokuState = (row, column, value) => {\n  return {\n    type: actions.SET_SUDOKU_STATE,\n    payload: {\n      row: row,\n      column: column,\n      value: value\n    }\n  };\n};\nexport const setInvalidCells = invalidNumbersArr => {\n  return {\n    type: actions.SET_INVALID_CELLS,\n    payload: {\n      invalidNumbersArr: invalidNumbersArr\n    }\n  };\n};\nexport const setInvalidRows = invalidRows => {\n  return {\n    type: actions.SET_INVALID_ROWS,\n    payload: {\n      invalidRows: invalidRows\n    }\n  };\n};\nexport const setInvalidColumns = invalidColumns => {\n  return {\n    type: actions.SET_INVALID_COLUMNS,\n    payload: {\n      invalidColumns: invalidColumns\n    }\n  };\n};\nexport const setPuzzleAndSolvedPuzzle = () => {\n  return {\n    type: actions.SET_PUZZLE_AND_SOLVED_PUZZLE\n  };\n};\nexport const solvePuzzle = () => {\n  return {\n    type: actions.SOLVE_PUZZLE\n  };\n};\nexport const sudokuIsSolved = () => {\n  return {\n    type: actions.SUDOKU_IS_SOLVED\n  };\n};\nexport const setInvalidBoxesAndNumbers = (invalidBoxesArr, invalidNumbersArr) => {\n  return {\n    type: actions.SET_INVALID_BOXES_AND_NUMBERS,\n    payload: {\n      invalidBoxesArr: invalidBoxesArr,\n      invalidNumbersArr: invalidNumbersArr\n    }\n  };\n};\nexport const solvePuzzleForUser = () => {\n  return {\n    type: actions.SOLVE_SUDOKU_FOR_USER\n  };\n};\nexport const initUserInputSUdokuToSolve = () => {\n  return {\n    type: actions.INIT_USER_INPUT_SUDOKU_TO_SOLVE\n  };\n};\nexport const setGameMode = mode => {\n  return {\n    type: actions.SET_GAME_MODE,\n    payload: {\n      mode: mode\n    }\n  };\n};\nexport const setDifficulty = difficulty => {\n  return {\n    type: actions.SET_DIFFICULTY,\n    payload: {\n      difficulty: difficulty\n    }\n  };\n};","map":{"version":3,"names":["actions","setActivateCell","payload","type","ACTIVATE_CELL","setSudokuState","row","column","value","SET_SUDOKU_STATE","setInvalidCells","invalidNumbersArr","SET_INVALID_CELLS","setInvalidRows","invalidRows","SET_INVALID_ROWS","setInvalidColumns","invalidColumns","SET_INVALID_COLUMNS","setPuzzleAndSolvedPuzzle","SET_PUZZLE_AND_SOLVED_PUZZLE","solvePuzzle","SOLVE_PUZZLE","sudokuIsSolved","SUDOKU_IS_SOLVED","setInvalidBoxesAndNumbers","invalidBoxesArr","SET_INVALID_BOXES_AND_NUMBERS","solvePuzzleForUser","SOLVE_SUDOKU_FOR_USER","initUserInputSUdokuToSolve","INIT_USER_INPUT_SUDOKU_TO_SOLVE","setGameMode","mode","SET_GAME_MODE","setDifficulty","difficulty","SET_DIFFICULTY"],"sources":["/Users/vishwajeetpatil/Desktop/git/sudosolver/src/store/actions/sudokuActions.js"],"sourcesContent":["import * as actions from \"../actions/actionTypes\";\n\nexport const setActivateCell = (payload) => {\n  return {\n    type: actions.ACTIVATE_CELL,\n    payload: payload,\n  };\n};\n\nexport const setSudokuState = (row, column, value) => {\n  return {\n    type: actions.SET_SUDOKU_STATE,\n    payload: { row: row, column: column, value: value },\n  };\n};\n\nexport const setInvalidCells = (invalidNumbersArr) => {\n  return {\n    type: actions.SET_INVALID_CELLS,\n    payload: {\n      invalidNumbersArr: invalidNumbersArr,\n    },\n  };\n};\n\nexport const setInvalidRows = (invalidRows) => {\n  return {\n    type: actions.SET_INVALID_ROWS,\n    payload: {\n      invalidRows: invalidRows,\n    },\n  };\n};\n\nexport const setInvalidColumns = (invalidColumns) => {\n  return {\n    type: actions.SET_INVALID_COLUMNS,\n    payload: {\n      invalidColumns: invalidColumns,\n    },\n  };\n};\n\nexport const setPuzzleAndSolvedPuzzle = () => {\n  return {\n    type: actions.SET_PUZZLE_AND_SOLVED_PUZZLE,\n  };\n};\n\nexport const solvePuzzle = () => {\n  return {\n    type: actions.SOLVE_PUZZLE,\n  };\n};\n\nexport const sudokuIsSolved = () => {\n  return {\n    type: actions.SUDOKU_IS_SOLVED,\n  };\n};\n\nexport const setInvalidBoxesAndNumbers = (\n  invalidBoxesArr,\n  invalidNumbersArr\n) => {\n  return {\n    type: actions.SET_INVALID_BOXES_AND_NUMBERS,\n    payload: {\n      invalidBoxesArr: invalidBoxesArr,\n      invalidNumbersArr: invalidNumbersArr,\n    },\n  };\n};\n\nexport const solvePuzzleForUser = () => {\n  return {\n    type: actions.SOLVE_SUDOKU_FOR_USER,\n  };\n};\n\nexport const initUserInputSUdokuToSolve = () => {\n  return {\n    type: actions.INIT_USER_INPUT_SUDOKU_TO_SOLVE,\n  };\n};\n\nexport const setGameMode = (mode) => {\n  return {\n    type: actions.SET_GAME_MODE,\n    payload: {\n      mode: mode,\n    },\n  };\n};\n\nexport const setDifficulty = (difficulty) => {\n  return {\n    type: actions.SET_DIFFICULTY,\n    payload: {\n      difficulty: difficulty,\n    },\n  };\n};\n"],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,wBAAwB;AAEjD,OAAO,MAAMC,eAAe,GAAIC,OAAO,IAAK;EAC1C,OAAO;IACLC,IAAI,EAAEH,OAAO,CAACI,aAAa;IAC3BF,OAAO,EAAEA;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMG,cAAc,GAAGA,CAACC,GAAG,EAAEC,MAAM,EAAEC,KAAK,KAAK;EACpD,OAAO;IACLL,IAAI,EAAEH,OAAO,CAACS,gBAAgB;IAC9BP,OAAO,EAAE;MAAEI,GAAG,EAAEA,GAAG;MAAEC,MAAM,EAAEA,MAAM;MAAEC,KAAK,EAAEA;IAAM;EACpD,CAAC;AACH,CAAC;AAED,OAAO,MAAME,eAAe,GAAIC,iBAAiB,IAAK;EACpD,OAAO;IACLR,IAAI,EAAEH,OAAO,CAACY,iBAAiB;IAC/BV,OAAO,EAAE;MACPS,iBAAiB,EAAEA;IACrB;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAME,cAAc,GAAIC,WAAW,IAAK;EAC7C,OAAO;IACLX,IAAI,EAAEH,OAAO,CAACe,gBAAgB;IAC9Bb,OAAO,EAAE;MACPY,WAAW,EAAEA;IACf;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAME,iBAAiB,GAAIC,cAAc,IAAK;EACnD,OAAO;IACLd,IAAI,EAAEH,OAAO,CAACkB,mBAAmB;IACjChB,OAAO,EAAE;MACPe,cAAc,EAAEA;IAClB;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAME,wBAAwB,GAAGA,CAAA,KAAM;EAC5C,OAAO;IACLhB,IAAI,EAAEH,OAAO,CAACoB;EAChB,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC/B,OAAO;IACLlB,IAAI,EAAEH,OAAO,CAACsB;EAChB,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAClC,OAAO;IACLpB,IAAI,EAAEH,OAAO,CAACwB;EAChB,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,yBAAyB,GAAGA,CACvCC,eAAe,EACff,iBAAiB,KACd;EACH,OAAO;IACLR,IAAI,EAAEH,OAAO,CAAC2B,6BAA6B;IAC3CzB,OAAO,EAAE;MACPwB,eAAe,EAAEA,eAAe;MAChCf,iBAAiB,EAAEA;IACrB;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMiB,kBAAkB,GAAGA,CAAA,KAAM;EACtC,OAAO;IACLzB,IAAI,EAAEH,OAAO,CAAC6B;EAChB,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,0BAA0B,GAAGA,CAAA,KAAM;EAC9C,OAAO;IACL3B,IAAI,EAAEH,OAAO,CAAC+B;EAChB,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,WAAW,GAAIC,IAAI,IAAK;EACnC,OAAO;IACL9B,IAAI,EAAEH,OAAO,CAACkC,aAAa;IAC3BhC,OAAO,EAAE;MACP+B,IAAI,EAAEA;IACR;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAME,aAAa,GAAIC,UAAU,IAAK;EAC3C,OAAO;IACLjC,IAAI,EAAEH,OAAO,CAACqC,cAAc;IAC5BnC,OAAO,EAAE;MACPkC,UAAU,EAAEA;IACd;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}