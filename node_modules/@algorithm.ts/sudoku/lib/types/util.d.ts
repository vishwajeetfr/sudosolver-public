import type { SudokuBoard } from './types';
/**
 * Create a sudoku board (two-dimensional array).
 * @param SUDOKU_SIZE
 */
export declare function createSudokuBoard(SUDOKU_SIZE: number): SudokuBoard;
/**
 * Fill the sudoku board with the given value.
 * @param board
 * @param v
 * @param SUDOKU_SIZE
 */
export declare function fillSudokuBoard(board: SudokuBoard, v: number, SUDOKU_SIZE?: number): void;
/**
 * Copy sudoku board from `src` to `dst`.
 * @param src
 * @param dst
 * @param SUDOKU_SIZE
 */
export declare function copySudokuBoard(src: Readonly<SudokuBoard>, dst: SudokuBoard, SUDOKU_SIZE?: number): void;
/**
 * Check if the solution of the given Sudoku game is a valid solution.
 *
 * @param solution
 * @param SUDOKU_SIZE_SQRT
 * @returns
 */
export declare function checkSudokuSolution(solution: SudokuBoard, SUDOKU_SIZE_SQRT: number): boolean;
/**
 * segmentCodeMap 是一个映射表，用于快速计算某个格子所在行在其所在列上的第几个子
 * 方阵中（或者所在列在其所在行上的第几个子方阵中）
 *
 * segmentCodeMap is a mapping table for quickly located the sub-matrix of a grid.
 *
 * For example:
 *
 *    In a 9x9 sudoku board, a grid (x, y) at the sub-matrix
 *    `(Math.floor(x / 3), Math.floor(y / 3))`. If use segmentNo to represent the
 *    position, it is `(segmentNo[x], segmentNo[y])`
 *
 * @param SUDOKU_SIZE
 */
export declare function createSegmentCodeMap(SUDOKU_SIZE_SQRT: number): number[];
